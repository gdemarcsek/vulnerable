input {
	file {
		'exclude' => '*.gz'
		'path' => '/var/log/audit/audit.log'
		'type' => 'audit'
		'sincedb_path' => '/var/logstash/sincedb-auditlog'
	}
}

filter {
	if [type] == 'audit' {
		grok {
			'match' => [
				"message", '^type=AVC msg=audit\(%{NUMBER:audit_epoch}:%{NUMBER:audit_counter}\): (?<apparmor_message>.*)$'
			]
			'tag_on_failure' => ['grok_failed']
		}
		if 'grok_failed' in [tags] {
			drop {}
		}
		kv {
			source => "apparmor_message"
			trim_key => " "
			trim_value => '"'
			remove_field => ["message", "apparmor_message"]
		}
		date {
      			match => ["audit_epoch", "ISO8601", "UNIX", "YYYY-MM-dd HH:mm:ss,SSS", "MM/dd/YYYY HH:mm:ss.SSS", "YYYY-MM-dd HH:mm:ss", "MMM dd HH:mm:ss YYYY", "MMM dd HH:mm:ss", "MMM  d HH:mm:ss YYYY", "MMM  d HH:mm:ss", "dd/MMM/YYYY:HH:mm:ss Z", "dd/MMM/YYYY:HH:mm:ss"]
      			target => "timestamp"
      			timezone => 'Europe/Budapest'
    		}
	}
}

output {
	file {
		path => '/var/log/logstash/logstash-debug.log'
		codec => rubydebug
	}
	elasticsearch {
		index => 'audit-%{+YYYY.MM.dd}'
		manage_template => true
		user => 'root'
		password => '**********'
		ssl => false
		manage_template => true
	}
}
